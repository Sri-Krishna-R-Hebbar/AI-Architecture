const puppeteer = require("puppeteer");

async function generatePdfFromSvg({ title, problem, svg, tech_stack = [] }) {
  const techHtml =
    Array.isArray(tech_stack) && tech_stack.length
      ? `<div class="tech"><b>Probable Tech Stack:</b><ul>${tech_stack
          .map((t) => `<li>${escapeHtml(t)}</li>`)
          .join("")}</ul></div>`
      : "";

  const html = `
  <!doctype html>
  <html>
    <head>
      <meta charset="utf-8" />
      <title>${escapeHtml(title)}</title>
      <style>
        body { font-family: Arial, Helvetica, sans-serif; margin: 24px; color: #111; }
        .title { font-size: 22px; font-weight: 700; margin-bottom: 8px; }
        .problem { font-size: 12.5px; margin-bottom: 12px; white-space: pre-wrap; }
        .tech { font-size: 12px; margin-bottom: 12px; }
        .tech ul { margin: 4px 0 0 18px; }
        .diagram { display: flex; justify-content: center; align-items: center; margin-top: 10px; }
        .diagram svg { max-width: 100%; height: auto; border: 1px solid #ddd; }
        footer { font-size: 11px; color: #666; margin-top: 24px; }
      </style>
    </head>
    <body>
      <div class="title">${escapeHtml(title)}</div>
      <div class="problem">${escapeHtml(problem)}</div>
      ${techHtml}
      <div class="diagram">${svg}</div>
      <footer>Generated by AI Architect Assistant</footer>
    </body>
  </html>
  `;

  const browser = await puppeteer.launch({
    args: ["--no-sandbox", "--disable-setuid-sandbox"],
    headless: "new",
  });

  try {
    const page = await browser.newPage();
    await page.setContent(html, { waitUntil: "networkidle0" });
    // short delay
    await new Promise((r) => setTimeout(r, 200));
    const pdfBuffer = await page.pdf({
      format: "A4",
      printBackground: true,
      margin: { top: "20mm", right: "15mm", bottom: "20mm", left: "15mm" },
    });
    return pdfBuffer;
  } finally {
    await browser.close();
  }
}

function escapeHtml(text) {
  if (!text) return "";
  return String(text)
    .replace(/&/g, "&amp;")
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;")
    .replace(/"/g, "&quot;")
    .replace(/'/g, "&#039;");
}

module.exports = { generatePdfFromSvg };
